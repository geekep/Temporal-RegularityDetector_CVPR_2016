name: "AlexNet"
input: "data"
input_shape {
  dim: 1
  dim: 10
  dim: 227
  dim: 227
}
# 3 x 227 x 227
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 256 
    kernel_size: 11
    stride: 4
    weight_filler {
      type: "xavier"    
    }
    bias_filler {
      type: "constant"      
    }
  }
}
layer {
  name: "relu1"
  type: "TanH"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "conv1"
  top: "norm1"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}

# 96 x 55x 55
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "norm1"
  top: "pool1"
  top: "pool1_mask"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}

# 96 x 27 x 27
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 128
    pad: 2
    kernel_size: 5
    group: 2
    weight_filler {
      type: "xavier"  
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "TanH"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "conv2"
  top: "norm2"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}

# 256 x 27 x 27
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "norm2"
  top: "pool2"
  top: "pool2_mask"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}

# 256 x 13 x 13
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "TanH"
  bottom: "conv3"
  top: "conv3"
}

# 384 x 13 x 13
layer { 
  bottom: 'conv3' 
  top: 'deconv3' 
  name: 'deconv3' 
  type: "Deconvolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param { 
    num_output: 128
    pad: 1
    kernel_size: 3
    weight_filler {      
      type: "xavier"      
    }
    bias_filler {      
      type: "constant"      
    }
  } 
}
layer { 
  bottom: 'deconv3' 
  top: 'deconv3' 
  name: 'deconv3-relu' 
  type: "TanH" 
}

# 256 x 13 x 13
layer { 
  type: "Unpooling"  
  bottom: "deconv3"  
  bottom: "pool2_mask"  
  top: "unpool2"  
  name: "unpool2"
  unpooling_param {   
    unpool: MAX   
    kernel_size: 3    
    stride: 2   
    unpool_size: 27 
  }
}

# 256 x 27 x 27
layer { 
  bottom: 'unpool2' 
  top: 'deconv2' 
  name: 'deconv2' 
  type: "Deconvolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param { 
    num_output: 256
    pad: 2
    kernel_size: 5
    weight_filler {      
      type: "xavier"      
    }
    bias_filler {      
      type: "constant" 
    }
  } 
}
layer { 
  bottom: 'deconv2' 
  top: 'deconv2' 
  name: 'deconv2-relu' 
  type: "TanH" 
}
layer {
  name: "unorm2"
  type: "LRN"
  bottom: "deconv2"
  top: "unorm2"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}

# 256 x 27 x 27
layer { 
  type: "Unpooling"  
  bottom: "unorm2"  
  bottom: "pool1_mask"  
  top: "unpool1"  
  name: "unpool1"
  unpooling_param {   
    unpool: MAX   
    kernel_size: 3    
    stride: 2   
    unpool_size: 55
  }
}

# 256 x 55 x 55
layer { 
  bottom: 'unpool1' 
  top: 'deconv1' 
  name: 'deconv1' 
  type: "Deconvolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param { 
    num_output: 10
    stride: 4
    kernel_size: 11
    weight_filler {      
      type: "xavier"      
    }
    bias_filler {      
      type: "constant"      
    }
  } 
}
layer { 
  bottom: 'deconv1' 
  top: 'deconv1' 
  name: 'deconv1-relu' 
  type: "TanH" 
}

layer {
  name: "loss"
  type: "EuclideanLoss"
  bottom: "deconv1"
  bottom: "data"
  top: "loss"
}
